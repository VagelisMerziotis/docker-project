version: "3.8"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    networks:
      - kafka-network

  nodejs_app:
    build:
      dockerfile: node.Dockerfile
    hostname: nodejs_puller
    container_name: nodejs_puller
    depends_on:
      - kafka
      - postgres_database
    environment:
      KAFKA_BROKER: "kafka:9092"
      KAFKA_TOPIC: "coin-market-data-BTC"
      KAFKA_USERNAME: "kafka"
      KAFKA_PASSWORD: "kafkapass"
      POSTGRES_USER: devuser
      POSTGRES_PASSWORD: devpass
      POSTGRES_DB: coin_db
      POSTGRES_HOST: pg_db
    ports:
      - 3000:3000
    networks:
      - kafka-network

  postgres_database:
    image: postgres:14-alpine
    hostname: pg_db
    container_name: pg_db
    environment:
      POSTGRES_USER: devuser
      POSTGRES_PASSWORD: devpass
      POSTGRES_DB: coin_db
    ports:
      - 5432:5432
    networks:
      - kafka-network
    volumes:
      - db_data:/var/lib/postgresql/data

  python_producer:
    build:
      dockerfile: python.Dockerfile
    hostname: python_producer
    container_name: python_producer
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER_URL: kafka:9092
      COIN_MARKET_API_KEY: 1311c9f2-c735-401c-b6d0-cdf34236071d
      URL: https://pro-api.coinmarketcap.com/v1/cryptocurrency/listings/latest
      KAFKA_TOPIC: coin-market-data-BTC
      KAFKA_USERNAME: "kafka"
      KAFKA_PASSWORD: "kafkapass"
    networks:
      - kafka-network

volumes:
  db_data:

networks:
  kafka-network:
    driver: bridge
