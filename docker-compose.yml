services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - 2181:3000 # Configure container port 3000 for development
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:3000 # Configure container port 3000 for development
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data

  # nodejs_app:
  #   build:
  #     context: ./nodejs
  #     dockerfile: Dockerfile
  #   hostname: nodejs_app
  #   container_name: nodejs_app
  #   depends_on:
  #     - kafka
  #     - database
  #   environment:
  #     KAFKA_BROKER: kafka:9092
  #     DATABASE_URL: "postgresql://myuser:mypassword@database:5432/mydb"
  #   ports:
  #     - 3000:3000 # Expose the Node.js app port (if needed)

  # database: # Using PostgreSQL as an example
  #   image: postgres:13
  #   hostname: database
  #   container_name: database
  #   environment:
  #     POSTGRES_USER: myuser
  #     POSTGRES_PASSWORD: mypassword
  #     POSTGRES_DB: mydb
  #   volumes:
  #     - db_data:/var/lib/postgresql/data

  # python_producer:
  #   build:
  #     dockerfile: Dockerfile_python
  #   hostname: python_producer
  #   container_name: python_producer
  #   depends_on:
  #     - kafka
  #   environment:
  #     KAFKA_BROKER: kafka:9092

volumes:
  db_data:
  kafka_data:
